[{"D:\\todolist-16\\src\\app\\store.ts":"1","D:\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"2","D:\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"3","D:\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx":"4","D:\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx":"5","D:\\todolist-16\\src\\app\\App.tsx":"6","D:\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"7","D:\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"8","D:\\todolist-16\\src\\index.tsx":"9","D:\\todolist-16\\src\\api\\todolists-api.ts":"10","D:\\todolist-16\\src\\features\\Login\\Login.tsx":"11","D:\\todolist-16\\src\\features\\Login\\auth-reducer.ts":"12","D:\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"13","D:\\todolist-16\\src\\app\\app-reducer.ts":"14","D:\\todolist-16\\src\\utils\\error-utils.ts":"15","D:\\ToDoList\\src\\reportWebVitals.ts":"16","D:\\ToDoList\\src\\features\\Login\\auth-reducer.ts":"17","D:\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts":"18","D:\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx":"19","D:\\ToDoList\\src\\components\\AddItemForm\\AddItemForm.tsx":"20","D:\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx":"21","D:\\ToDoList\\src\\index.tsx":"22","D:\\ToDoList\\src\\app\\app-reducer.ts":"23","D:\\ToDoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"24","D:\\ToDoList\\src\\features\\Login\\Login.tsx":"25","D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"26","D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"27","D:\\ToDoList\\src\\features\\TodolistsList\\tasks-reducer.ts":"28","D:\\ToDoList\\src\\api\\todolists-api.ts":"29"},{"size":1097,"mtime":1597327450000,"results":"30","hashOfConfig":"31"},{"size":4585,"mtime":1597327450000,"results":"32","hashOfConfig":"31"},{"size":1092,"mtime":1596716576000,"results":"33","hashOfConfig":"31"},{"size":1595,"mtime":1596715562000,"results":"34","hashOfConfig":"35"},{"size":952,"mtime":1594154724000,"results":"36","hashOfConfig":"31"},{"size":2616,"mtime":1614275363950,"results":"37","hashOfConfig":"31"},{"size":1773,"mtime":1596295538000,"results":"38","hashOfConfig":"35"},{"size":4193,"mtime":1596715250000,"results":"39","hashOfConfig":"31"},{"size":740,"mtime":1614267838692,"results":"40","hashOfConfig":"35"},{"size":3051,"mtime":1614275079609,"results":"41","hashOfConfig":"31"},{"size":3551,"mtime":1614274871178,"results":"42","hashOfConfig":"31"},{"size":2344,"mtime":1614274937082,"results":"43","hashOfConfig":"35"},{"size":4018,"mtime":1614273096063,"results":"44","hashOfConfig":"35"},{"size":1689,"mtime":1614274443724,"results":"45","hashOfConfig":"35"},{"size":811,"mtime":1596719330000,"results":"46","hashOfConfig":"35"},{"size":425,"mtime":1607869388000,"results":"47","hashOfConfig":"48"},{"size":2344,"mtime":1614274937082,"results":"49","hashOfConfig":"48"},{"size":4585,"mtime":1597327450000,"results":"50","hashOfConfig":"48"},{"size":4018,"mtime":1614273096063,"results":"51","hashOfConfig":"48"},{"size":1595,"mtime":1596715562000,"results":"52","hashOfConfig":"48"},{"size":952,"mtime":1594154724000,"results":"53","hashOfConfig":"48"},{"size":740,"mtime":1614267838692,"results":"54","hashOfConfig":"48"},{"size":1689,"mtime":1614274443724,"results":"55","hashOfConfig":"48"},{"size":1092,"mtime":1596716576000,"results":"56","hashOfConfig":"48"},{"size":3551,"mtime":1614274871178,"results":"57","hashOfConfig":"48"},{"size":4193,"mtime":1596715250000,"results":"58","hashOfConfig":"48"},{"size":1773,"mtime":1596295538000,"results":"59","hashOfConfig":"48"},{"size":5633,"mtime":1596722126000,"results":"60","hashOfConfig":"48"},{"size":3051,"mtime":1614275079609,"results":"61","hashOfConfig":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"thpgos",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"86rogs",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1e5m1gs",{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\todolist-16\\src\\app\\store.ts",[],"D:\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["130"],"D:\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],["131","132"],"D:\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx",["133","134","135"],"D:\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\todolist-16\\src\\app\\App.tsx",["136","137"],"D:\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["138","139","140"],"D:\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["141","142","143","144","145","146"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["147","148"],"D:\\todolist-16\\src\\index.tsx",[],"D:\\todolist-16\\src\\api\\todolists-api.ts",[],"D:\\todolist-16\\src\\features\\Login\\Login.tsx",["149"],"D:\\todolist-16\\src\\features\\Login\\auth-reducer.ts",["150","151"],"D:\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["152","153","154","155","156","157","158","159"],"D:\\todolist-16\\src\\app\\app-reducer.ts",[],"D:\\todolist-16\\src\\utils\\error-utils.ts",[],"D:\\ToDoList\\src\\reportWebVitals.ts",[],["160","161"],"D:\\ToDoList\\src\\features\\Login\\auth-reducer.ts",["162","163"],"import { Dispatch } from 'redux'\r\nimport {SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType, setIsInitializedAC} from '../../app/app-reducer'\r\nimport {authAPI, dataType, todolistsAPI} from \"../../api/todolists-api\";\r\nimport {addTodolistAC} from \"../TodolistsList/todolists-reducer\";\r\nimport {handleServerAppError, handleServerNetworkError} from \"../../utils/error-utils\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data:dataType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n            if(res.data.resultCode === 0){\r\n                dispatch(setAppStatusAC('succeeded'))\r\n                dispatch(setIsLoggedInAC(true))\r\n            }else{\r\n                handleServerAppError(res.data, dispatch);\r\n            }\r\n\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me().then(res => {\r\n        dispatch(setIsInitializedAC(true))\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n        } else {\r\n        }\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.logout()\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setIsLoggedInAC(false))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\n\r\n\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType\r\n",["164","165"],"D:\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts",["166"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","D:\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx",["167","168","169","170","171","172","173","174"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLoggedIn= useSelector<AppRootStateType>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","D:\\ToDoList\\src\\components\\AddItemForm\\AddItemForm.tsx",["175","176","177"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\ToDoList\\src\\index.tsx",[],"D:\\ToDoList\\src\\app\\app-reducer.ts",[],["178","179"],"D:\\ToDoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\ToDoList\\src\\features\\Login\\Login.tsx",["180"],"D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["181","182","183","184","185","186"],"D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["187","188","189"],"D:\\ToDoList\\src\\features\\TodolistsList\\tasks-reducer.ts",["190","191"],"D:\\ToDoList\\src\\api\\todolists-api.ts",[],{"ruleId":"192","severity":1,"message":"193","line":10,"column":45,"nodeType":"194","messageId":"195","endLine":10,"endColumn":47},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":9,"nodeType":"202","messageId":"203","endLine":2,"endColumn":12},{"ruleId":"200","severity":1,"message":"204","line":2,"column":14,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"200","severity":1,"message":"205","line":2,"column":22,"nodeType":"202","messageId":"203","endLine":2,"endColumn":33},{"ruleId":"200","severity":1,"message":"206","line":4,"column":15,"nodeType":"202","messageId":"203","endLine":4,"endColumn":21},{"ruleId":"207","severity":1,"message":"208","line":26,"column":7,"nodeType":"209","endLine":26,"endColumn":9,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":15,"column":97,"nodeType":"209","endLine":15,"endColumn":130,"suggestions":"212"},{"ruleId":"207","severity":1,"message":"211","line":20,"column":8,"nodeType":"209","endLine":20,"endColumn":41,"suggestions":"213"},{"ruleId":"207","severity":1,"message":"211","line":24,"column":8,"nodeType":"209","endLine":24,"endColumn":41,"suggestions":"214"},{"ruleId":"207","severity":1,"message":"215","line":35,"column":8,"nodeType":"209","endLine":35,"endColumn":10,"suggestions":"216"},{"ruleId":"207","severity":1,"message":"211","line":39,"column":8,"nodeType":"209","endLine":39,"endColumn":42,"suggestions":"217"},{"ruleId":"207","severity":1,"message":"211","line":46,"column":8,"nodeType":"209","endLine":46,"endColumn":54,"suggestions":"218"},{"ruleId":"207","severity":1,"message":"211","line":48,"column":95,"nodeType":"209","endLine":48,"endColumn":134,"suggestions":"219"},{"ruleId":"207","severity":1,"message":"211","line":49,"column":101,"nodeType":"209","endLine":49,"endColumn":140,"suggestions":"220"},{"ruleId":"207","severity":1,"message":"211","line":50,"column":107,"nodeType":"209","endLine":50,"endColumn":146,"suggestions":"221"},{"ruleId":"196","replacedBy":"222"},{"ruleId":"198","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":57,"column":32,"nodeType":"226","endLine":57,"endColumn":49},{"ruleId":"200","severity":1,"message":"227","line":3,"column":28,"nodeType":"202","messageId":"203","endLine":3,"endColumn":40},{"ruleId":"200","severity":1,"message":"228","line":4,"column":9,"nodeType":"202","messageId":"203","endLine":4,"endColumn":22},{"ruleId":"207","severity":1,"message":"229","line":36,"column":8,"nodeType":"209","endLine":36,"endColumn":10,"suggestions":"230"},{"ruleId":"207","severity":1,"message":"231","line":41,"column":8,"nodeType":"209","endLine":41,"endColumn":10,"suggestions":"232"},{"ruleId":"207","severity":1,"message":"231","line":46,"column":8,"nodeType":"209","endLine":46,"endColumn":10,"suggestions":"233"},{"ruleId":"207","severity":1,"message":"231","line":51,"column":8,"nodeType":"209","endLine":51,"endColumn":10,"suggestions":"234"},{"ruleId":"207","severity":1,"message":"231","line":56,"column":8,"nodeType":"209","endLine":56,"endColumn":10,"suggestions":"235"},{"ruleId":"207","severity":1,"message":"231","line":61,"column":8,"nodeType":"209","endLine":61,"endColumn":10,"suggestions":"236"},{"ruleId":"207","severity":1,"message":"231","line":66,"column":8,"nodeType":"209","endLine":66,"endColumn":10,"suggestions":"237"},{"ruleId":"207","severity":1,"message":"231","line":71,"column":8,"nodeType":"209","endLine":71,"endColumn":10,"suggestions":"238"},{"ruleId":"196","replacedBy":"239"},{"ruleId":"198","replacedBy":"240"},{"ruleId":"200","severity":1,"message":"227","line":3,"column":28,"nodeType":"202","messageId":"203","endLine":3,"endColumn":40},{"ruleId":"200","severity":1,"message":"228","line":4,"column":9,"nodeType":"202","messageId":"203","endLine":4,"endColumn":22},{"ruleId":"196","replacedBy":"241"},{"ruleId":"198","replacedBy":"242"},{"ruleId":"192","severity":1,"message":"193","line":10,"column":45,"nodeType":"194","messageId":"195","endLine":10,"endColumn":47},{"ruleId":"207","severity":1,"message":"229","line":36,"column":8,"nodeType":"209","endLine":36,"endColumn":10,"suggestions":"243"},{"ruleId":"207","severity":1,"message":"231","line":41,"column":8,"nodeType":"209","endLine":41,"endColumn":10,"suggestions":"244"},{"ruleId":"207","severity":1,"message":"231","line":46,"column":8,"nodeType":"209","endLine":46,"endColumn":10,"suggestions":"245"},{"ruleId":"207","severity":1,"message":"231","line":51,"column":8,"nodeType":"209","endLine":51,"endColumn":10,"suggestions":"246"},{"ruleId":"207","severity":1,"message":"231","line":56,"column":8,"nodeType":"209","endLine":56,"endColumn":10,"suggestions":"247"},{"ruleId":"207","severity":1,"message":"231","line":61,"column":8,"nodeType":"209","endLine":61,"endColumn":10,"suggestions":"248"},{"ruleId":"207","severity":1,"message":"231","line":66,"column":8,"nodeType":"209","endLine":66,"endColumn":10,"suggestions":"249"},{"ruleId":"207","severity":1,"message":"231","line":71,"column":8,"nodeType":"209","endLine":71,"endColumn":10,"suggestions":"250"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":9,"nodeType":"202","messageId":"203","endLine":2,"endColumn":12},{"ruleId":"200","severity":1,"message":"204","line":2,"column":14,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"200","severity":1,"message":"205","line":2,"column":22,"nodeType":"202","messageId":"203","endLine":2,"endColumn":33},{"ruleId":"196","replacedBy":"251"},{"ruleId":"198","replacedBy":"252"},{"ruleId":"224","severity":1,"message":"225","line":57,"column":32,"nodeType":"226","endLine":57,"endColumn":49},{"ruleId":"207","severity":1,"message":"215","line":35,"column":8,"nodeType":"209","endLine":35,"endColumn":10,"suggestions":"253"},{"ruleId":"207","severity":1,"message":"211","line":39,"column":8,"nodeType":"209","endLine":39,"endColumn":42,"suggestions":"254"},{"ruleId":"207","severity":1,"message":"211","line":46,"column":8,"nodeType":"209","endLine":46,"endColumn":54,"suggestions":"255"},{"ruleId":"207","severity":1,"message":"211","line":48,"column":95,"nodeType":"209","endLine":48,"endColumn":134,"suggestions":"256"},{"ruleId":"207","severity":1,"message":"211","line":49,"column":101,"nodeType":"209","endLine":49,"endColumn":140,"suggestions":"257"},{"ruleId":"207","severity":1,"message":"211","line":50,"column":107,"nodeType":"209","endLine":50,"endColumn":146,"suggestions":"258"},{"ruleId":"207","severity":1,"message":"211","line":15,"column":97,"nodeType":"209","endLine":15,"endColumn":130,"suggestions":"259"},{"ruleId":"207","severity":1,"message":"211","line":20,"column":8,"nodeType":"209","endLine":20,"endColumn":41,"suggestions":"260"},{"ruleId":"207","severity":1,"message":"211","line":24,"column":8,"nodeType":"209","endLine":24,"endColumn":41,"suggestions":"261"},{"ruleId":"200","severity":1,"message":"262","line":5,"column":9,"nodeType":"202","messageId":"203","endLine":5,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":13,"column":94,"nodeType":"194","messageId":"195","endLine":13,"endColumn":96},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["263"],"no-negated-in-lhs",["264"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["265"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["266"],["267"],["268"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["269"],["270"],["271"],["272"],["273"],["274"],["263"],["264"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'todolistsAPI' is defined but never used.","'addTodolistAC' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["275"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["276"],["277"],["278"],["279"],["280"],["281"],["282"],["263"],["264"],["263"],["264"],["283"],["284"],["285"],["286"],["287"],["288"],["289"],["290"],["263"],["264"],["291"],["292"],["293"],["294"],["295"],["296"],["297"],["298"],["299"],"'setAppErrorAC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"302","fix":"304"},{"desc":"302","fix":"305"},{"desc":"306","fix":"307"},{"desc":"302","fix":"308"},{"desc":"302","fix":"309"},{"desc":"302","fix":"310"},{"desc":"302","fix":"311"},{"desc":"302","fix":"312"},{"desc":"313","fix":"314"},{"desc":"300","fix":"315"},{"desc":"300","fix":"316"},{"desc":"300","fix":"317"},{"desc":"300","fix":"318"},{"desc":"300","fix":"319"},{"desc":"300","fix":"320"},{"desc":"300","fix":"321"},{"desc":"313","fix":"322"},{"desc":"300","fix":"323"},{"desc":"300","fix":"324"},{"desc":"300","fix":"325"},{"desc":"300","fix":"326"},{"desc":"300","fix":"327"},{"desc":"300","fix":"328"},{"desc":"300","fix":"329"},{"desc":"306","fix":"330"},{"desc":"302","fix":"331"},{"desc":"302","fix":"332"},{"desc":"302","fix":"333"},{"desc":"302","fix":"334"},{"desc":"302","fix":"335"},{"desc":"302","fix":"336"},{"desc":"302","fix":"337"},{"desc":"302","fix":"338"},"Update the dependencies array to be: [dispatch]",{"range":"339","text":"340"},"Update the dependencies array to be: [props]",{"range":"341","text":"342"},{"range":"343","text":"342"},{"range":"344","text":"342"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"345","text":"346"},{"range":"347","text":"342"},{"range":"348","text":"342"},{"range":"349","text":"342"},{"range":"350","text":"342"},{"range":"351","text":"342"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"352","text":"353"},{"range":"354","text":"340"},{"range":"355","text":"340"},{"range":"356","text":"340"},{"range":"357","text":"340"},{"range":"358","text":"340"},{"range":"359","text":"340"},{"range":"360","text":"340"},{"range":"361","text":"353"},{"range":"362","text":"340"},{"range":"363","text":"340"},{"range":"364","text":"340"},{"range":"365","text":"340"},{"range":"366","text":"340"},{"range":"367","text":"340"},{"range":"368","text":"340"},{"range":"369","text":"346"},{"range":"370","text":"342"},{"range":"371","text":"342"},{"range":"372","text":"342"},{"range":"373","text":"342"},{"range":"374","text":"342"},{"range":"375","text":"342"},{"range":"376","text":"342"},{"range":"377","text":"342"},[1223,1225],"[dispatch]",[765,798],"[props]",[1071,1104],[1261,1294],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1316,1318],"[demo, dispatch, isLoggedIn]",[1487,1489],[1658,1660],[1863,1865],[2076,2078],[2277,2279],[2424,2426],[2603,2605],[1316,1318],[1487,1489],[1658,1660],[1863,1865],[2076,2078],[2277,2279],[2424,2426],[2603,2605],[1464,1466],[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320],[765,798],[1071,1104],[1261,1294]]