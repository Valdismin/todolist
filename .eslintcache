[{"D:\\ToDoList\\src\\reportWebVitals.ts":"1","D:\\ToDoList\\src\\features\\Login\\auth-reducer.ts":"2","D:\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts":"3","D:\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx":"4","D:\\ToDoList\\src\\components\\AddItemForm\\AddItemForm.tsx":"5","D:\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx":"6","D:\\ToDoList\\src\\index.tsx":"7","D:\\ToDoList\\src\\app\\app-reducer.ts":"8","D:\\ToDoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"9","D:\\ToDoList\\src\\features\\Login\\Login.tsx":"10","D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"11","D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"12","D:\\ToDoList\\src\\features\\TodolistsList\\tasks-reducer.ts":"13","D:\\ToDoList\\src\\api\\todolists-api.ts":"14","D:\\ToDoList\\src\\app\\store.ts":"15","D:\\ToDoList\\src\\app\\App.tsx":"16","D:\\ToDoList\\src\\utils\\error-utils.ts":"17"},{"size":425,"mtime":1607869388000,"results":"18","hashOfConfig":"19"},{"size":1787,"mtime":1618259806402,"results":"20","hashOfConfig":"19"},{"size":4488,"mtime":1618262485075,"results":"21","hashOfConfig":"19"},{"size":4047,"mtime":1618262811620,"results":"22","hashOfConfig":"19"},{"size":1595,"mtime":1596715562911,"results":"23","hashOfConfig":"19"},{"size":952,"mtime":1594154725462,"results":"24","hashOfConfig":"19"},{"size":740,"mtime":1614267838692,"results":"25","hashOfConfig":"19"},{"size":1851,"mtime":1618259806843,"results":"26","hashOfConfig":"19"},{"size":1100,"mtime":1618260200085,"results":"27","hashOfConfig":"19"},{"size":3551,"mtime":1614274871178,"results":"28","hashOfConfig":"19"},{"size":4193,"mtime":1596715250000,"results":"29","hashOfConfig":"19"},{"size":1773,"mtime":1596295539998,"results":"30","hashOfConfig":"19"},{"size":5334,"mtime":1618262649691,"results":"31","hashOfConfig":"19"},{"size":3191,"mtime":1618257186421,"results":"32","hashOfConfig":"19"},{"size":1400,"mtime":1618258697552,"results":"33","hashOfConfig":"19"},{"size":2536,"mtime":1597933455531,"results":"34","hashOfConfig":"19"},{"size":712,"mtime":1618260582508,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1e5m1gs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ToDoList\\src\\reportWebVitals.ts",[],["76","77"],"D:\\ToDoList\\src\\features\\Login\\auth-reducer.ts",[],"D:\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts",["78","79","80"],"D:\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx",["81","82","83","84","85","86","87","88"],"D:\\ToDoList\\src\\components\\AddItemForm\\AddItemForm.tsx",["89","90","91"],"D:\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\ToDoList\\src\\index.tsx",[],["92","93"],"D:\\ToDoList\\src\\app\\app-reducer.ts",[],"D:\\ToDoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\ToDoList\\src\\features\\Login\\Login.tsx",["94"],"import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"./auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const isLoggedIn= useSelector<AppRootStateType>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email Required!';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password Required!'\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Password must be more than 2 symbols!'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if(isLoggedIn) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.touched.email &&\r\n                        formik.errors.email ? <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.touched.password &&\r\n                        formik.errors.password ? <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                            control={<Checkbox/>}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n",["95","96"],"D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["97","98","99","100","101","102"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["103","104"],"D:\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["105","106","107"],"D:\\ToDoList\\src\\features\\TodolistsList\\tasks-reducer.ts",["108","109","110","111"],"D:\\ToDoList\\src\\api\\todolists-api.ts",[],"D:\\ToDoList\\src\\app\\store.ts",["112","113"],"D:\\ToDoList\\src\\app\\App.tsx",["114","115"],"D:\\ToDoList\\src\\utils\\error-utils.ts",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":2,"message":"121","line":24,"column":13,"nodeType":"122","messageId":"123","endLine":24,"endColumn":56},{"ruleId":"120","severity":2,"message":"121","line":28,"column":13,"nodeType":"122","messageId":"123","endLine":28,"endColumn":58},{"ruleId":"120","severity":2,"message":"121","line":32,"column":13,"nodeType":"122","messageId":"123","endLine":32,"endColumn":64},{"ruleId":"124","severity":1,"message":"125","line":37,"column":8,"nodeType":"126","endLine":37,"endColumn":10,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":42,"column":8,"nodeType":"126","endLine":42,"endColumn":10,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"128","line":47,"column":8,"nodeType":"126","endLine":47,"endColumn":10,"suggestions":"130"},{"ruleId":"124","severity":1,"message":"128","line":52,"column":8,"nodeType":"126","endLine":52,"endColumn":10,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"128","line":57,"column":8,"nodeType":"126","endLine":57,"endColumn":10,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"128","line":62,"column":8,"nodeType":"126","endLine":62,"endColumn":10,"suggestions":"133"},{"ruleId":"124","severity":1,"message":"128","line":67,"column":8,"nodeType":"126","endLine":67,"endColumn":10,"suggestions":"134"},{"ruleId":"124","severity":1,"message":"128","line":72,"column":8,"nodeType":"126","endLine":72,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":9,"nodeType":"138","messageId":"139","endLine":2,"endColumn":12},{"ruleId":"136","severity":1,"message":"140","line":2,"column":14,"nodeType":"138","messageId":"139","endLine":2,"endColumn":20},{"ruleId":"136","severity":1,"message":"141","line":2,"column":22,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"116","replacedBy":"142"},{"ruleId":"118","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":57,"column":32,"nodeType":"146","endLine":57,"endColumn":49},{"ruleId":"116","replacedBy":"147"},{"ruleId":"118","replacedBy":"148"},{"ruleId":"124","severity":1,"message":"149","line":35,"column":8,"nodeType":"126","endLine":35,"endColumn":10,"suggestions":"150"},{"ruleId":"124","severity":1,"message":"151","line":39,"column":8,"nodeType":"126","endLine":39,"endColumn":42,"suggestions":"152"},{"ruleId":"124","severity":1,"message":"151","line":46,"column":8,"nodeType":"126","endLine":46,"endColumn":54,"suggestions":"153"},{"ruleId":"124","severity":1,"message":"151","line":48,"column":95,"nodeType":"126","endLine":48,"endColumn":134,"suggestions":"154"},{"ruleId":"124","severity":1,"message":"151","line":49,"column":101,"nodeType":"126","endLine":49,"endColumn":140,"suggestions":"155"},{"ruleId":"124","severity":1,"message":"151","line":50,"column":107,"nodeType":"126","endLine":50,"endColumn":146,"suggestions":"156"},{"ruleId":"116","replacedBy":"157"},{"ruleId":"118","replacedBy":"158"},{"ruleId":"124","severity":1,"message":"151","line":15,"column":97,"nodeType":"126","endLine":15,"endColumn":130,"suggestions":"159"},{"ruleId":"124","severity":1,"message":"151","line":20,"column":8,"nodeType":"126","endLine":20,"endColumn":41,"suggestions":"160"},{"ruleId":"124","severity":1,"message":"151","line":24,"column":8,"nodeType":"126","endLine":24,"endColumn":41,"suggestions":"161"},{"ruleId":"136","severity":1,"message":"162","line":2,"column":5,"nodeType":"138","messageId":"139","endLine":2,"endColumn":26},{"ruleId":"136","severity":1,"message":"163","line":3,"column":5,"nodeType":"138","messageId":"139","endLine":3,"endColumn":29},{"ruleId":"136","severity":1,"message":"164","line":4,"column":5,"nodeType":"138","messageId":"139","endLine":4,"endColumn":27},{"ruleId":"136","severity":1,"message":"165","line":14,"column":5,"nodeType":"138","messageId":"139","endLine":14,"endColumn":17},{"ruleId":"136","severity":1,"message":"166","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":24},{"ruleId":"136","severity":1,"message":"167","line":3,"column":43,"nodeType":"138","messageId":"139","endLine":3,"endColumn":54},{"ruleId":"124","severity":1,"message":"168","line":35,"column":8,"nodeType":"126","endLine":35,"endColumn":10,"suggestions":"169"},{"ruleId":"124","severity":1,"message":"128","line":39,"column":8,"nodeType":"126","endLine":39,"endColumn":10,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["173"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["174"],["175"],["176"],["177"],["178"],["179"],["180"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["171"],["172"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["171"],["172"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["181"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["182"],["183"],["184"],["185"],["186"],["171"],["172"],["187"],["188"],["189"],"'AddTodolistActionType' is defined but never used.","'RemoveTodolistActionType' is defined but never used.","'SetTodolistsActionType' is defined but never used.","'TodolistType' is defined but never used.","'applyMiddleware' is defined but never used.","'createStore' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["190"],["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"194","fix":"197"},{"desc":"194","fix":"198"},{"desc":"194","fix":"199"},{"desc":"194","fix":"200"},{"desc":"194","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},{"desc":"204","fix":"207"},{"desc":"204","fix":"208"},{"desc":"204","fix":"209"},{"desc":"204","fix":"210"},{"desc":"204","fix":"211"},{"desc":"204","fix":"212"},{"desc":"194","fix":"213"},{"desc":"194","fix":"214"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"215","text":"216"},"Update the dependencies array to be: [dispatch]",{"range":"217","text":"218"},{"range":"219","text":"218"},{"range":"220","text":"218"},{"range":"221","text":"218"},{"range":"222","text":"218"},{"range":"223","text":"218"},{"range":"224","text":"218"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"225","text":"226"},"Update the dependencies array to be: [props]",{"range":"227","text":"228"},{"range":"229","text":"228"},{"range":"230","text":"228"},{"range":"231","text":"228"},{"range":"232","text":"228"},{"range":"233","text":"228"},{"range":"234","text":"228"},{"range":"235","text":"228"},{"range":"236","text":"218"},{"range":"237","text":"218"},[1329,1331],"[demo, dispatch, isLoggedIn]",[1500,1502],"[dispatch]",[1671,1673],[1876,1878],[2089,2091],[2304,2306],[2451,2453],[2630,2632],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[765,798],[1071,1104],[1261,1294],[1240,1242],[1331,1333]]